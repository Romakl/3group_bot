import time

from aiogram import types
from filters.group_filter import ChatIdFilter, IsGroup
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery

from keyboards.inline.callback_datas import seminar
from keyboards.inline.choice_buttons import akadembutton, seminar_timer
from loader import dp, bot
from utils.db_api.quick_commands import select_user
from utils.redis.redis_db import redis_get


@dp.message_handler(Command('List'), ChatIdFilter())
async def chat_buttons(message: types.Message):
    chat_id = message.chat.id
    await bot.send_message(chat_id=chat_id, text="–ë–æ—Ç –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º:", reply_markup=akadembutton)


@dp.message_handler(Command('key'))
async def chat_buttons(message: types.Message):
    chat_id = message.chat.id
    await bot.send_message(chat_id=chat_id, text="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–±—Ä–∞–Ω–∞", reply_markup=types.ReplyKeyboardRemove())


@dp.callback_query_handler(seminar.filter(item_name='Popko'))
async def get_data(call: CallbackQuery, ):
    redis_value = await redis_get()
    await call.message.answer(f'üïê-----–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ {redis_value[0]}:{redis_value[1]}-----üïê\n'
                              '‚òÅÔ∏è------------–ü–æ–≥–æ–¥–∞, –ö–∏–µ–≤-----------‚òÅÔ∏è\n'
                              f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º: {redis_value[2]}¬∞C\n'
                              f'–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–ª–∞–∫–æ–≤: {redis_value[3]}\n'
                              f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {redis_value[4]}%\n'
                              f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {redis_value[5]} –ö–ú/–ß\n'
                              '\n'
                              'üíµ---------–ö—É—Ä—Å –í–∞–ª—é—Ç, –ö–∏–µ–≤--------üíµ\n'
                              f'USD(–ß–µ—Ä–Ω—ã–π —Ä—ã–Ω–æ–∫): {redis_value[6]} - {redis_value[7]}\n'
                              f'EUR(–ß–µ—Ä–Ω—ã–π —Ä—ã–Ω–æ–∫): {redis_value[8]} - {redis_value[9]}\n'
                              f'CHF(–ß–µ—Ä–Ω—ã–π —Ä—ã–Ω–æ–∫): {redis_value[10]} - {redis_value[11]}\n'
                              '\n'
                              'ü™ô----------------Crypto----------------ü™ô\n'
                              f'BTC: {redis_value[12]}$\n'
                              f'ETH: {redis_value[13]}$\n'
                              f'SOL: {redis_value[14]}$\n'
                              f'BNB: {redis_value[15]}$')


@dp.callback_query_handler(seminar.filter(item_name='seminar'), IsGroup())
async def timer(call: CallbackQuery):
    time_count = 24
    for i in range(time_count, 0, -1):
        await call.message.edit_text(text=f'–û—Å—Ç–∞–ª–æ—Å—å {i * 5} —Å–µ–∫—É–Ω–¥')
        time.sleep(5)
    await call.message.delete()
    await call.message.answer(text="The time has cum", disable_notification=True, reply_markup=seminar_timer)


@dp.callback_query_handler(seminar.filter(item_name='boyz'))
async def buying_pear(call: CallbackQuery):
    await call.message.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞, —è —Ö–æ—á—É —Å –≤–∞–º–∏ –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å—Å—è. –Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é '
                              '–¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã(–ù–∞–ø—Ä–∏–º–µ—Ä BNB –∏–ª–∏ '
                              'SOL) –∏–ª–∏ –∏–Ω–¥–µ–∫—Å—ã(NASDAQ, SNP500) –∏ –≤—ã–¥–∞–≤–∞—Ç—å –ø–æ –∫—É—Å–æ—á–∫—É –∑–∞ –ø–æ–ª–µ–∑–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è '
                              '–≥—Ä—É–ø–ø—ã, —Ç–∞–∫ –±—É–¥–µ—Ç —Å—Ç–∏–º—É–ª –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É –∏ –∫–∞–∂–¥—ã–π —Å—Ç–∞–Ω–µ—Ç 100% –±–æ–≥–∞—á–µ –∫ –∫–æ–Ω—Ü—É '
                              '–æ–±—É—á–µ–Ω–∏—è. –¢–∞–∫ –∂–µ –µ—Å—Ç—å –ø–∞—Ä—É –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ —Ç–∏–ø—É Instagram –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º '
                              '–≤–º–µ—Å—Ç–µ —Å –Ω–∞—à–∏–º –ò–ª—å—ë–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∞–Ω–æ–Ω–∏–º–Ω–æ, —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–π –∏ –ø–æ—Å—Ç–æ–≤, '
                              '–Ω–∞–∫—Ä—É—Ç–∫–∞ –ª–∞–π–∫–æ–≤. –ï—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –¥–∞–π—Ç–µ –∑–µ–ª—ë–Ω—ã–π —Å–≤–µ—Ç –Ω–∞–º) –¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ '
                              '–ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –Ω–∞–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –º—ã —Ä–µ–∞–ª–∏–∑—É–µ–º –µ–≥–æ –≤ —Ä–∞–º–∫–∞—Ö –±–æ—Ç–∞')


@dp.callback_query_handler(seminar.filter(item_name='close'))
async def buying_pear(call: CallbackQuery):
    await call.message.edit_reply_markup()


@dp.message_handler(Command('kek'))
async def kek(message: types.Message):
    kek1 = await select_user(message.from_user.id)
    print(kek1)
